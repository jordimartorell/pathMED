% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trainModel.R
\name{trainModel}
\alias{trainModel}
\title{Build machine-learning based on gene-expression/mscores data}
\usage{
trainModel(
  expData,
  metadata,
  models = methodsML(outcomeClass = "character"),
  var2predict,
  paired = NULL,
  Koutter = 5,
  Kinner = 4,
  repeatsCV = 5,
  filterFeatures = NULL,
  filterSizes = seq(2, 100, by = 2),
  rerank = FALSE,
  continue_on_fail = TRUE,
  positiveClass = NULL,
  saveLogFile = NULL
)
}
\arguments{
\item{expData}{Feature matrix. Samples in columns and features in
rows. expData must be a numerical matrix}

\item{metadata}{dataframe with information for each sample. Samples in rows
and variables in columns}

\item{models}{named list with the ML models generated with
caret::caretModelSpec function. methodsML function may be used to prepare
this list}

\item{var2predict}{character with the column name of the @metadata to predict}

\item{paired}{character with the column name of the @metadata with paired information.
Paired information is used to always asign samples from the same source (i.e. patient)
to the same group (train or test). paired = NULL by default}

\item{Koutter}{number of Outter folds in which exp.data is split for neasted
cold validation.
A list of integer with elements for each resampling iteration is admitted.
Each list element is a vector of integers corresponding to the rows used for
training at that iteration.}

\item{Kinner}{number of cross-validation folds (for parameter tuning)}

\item{repeatsCV}{number of repetitions of the parameter tuning process}

\item{filterFeatures}{"rfe" (Recursive Feature Elimination), "sbf" (Selection
By Filtering) or NULL (no feature selection)}

\item{filterSizes}{Only for filterFeatures = "rfe". A numeric vector of integers
corresponding to the number of features that should be retained}

\item{rerank}{Only for filterFeatures = "rfe". A logical: should variable importance be
re-calculated each time features are removed?}

\item{continue_on_fail}{whether or not to continue training the models if any of them fail}

\item{positiveClass}{outcome value that must be considered as positive class
(for categoric outcomes)}

\item{saveLogFile}{path to a .txt file in which to save error and warning messages}
}
\value{
A list with four elements. The first one is the model. The second one
is a table with different metrics obtained. The third one is a list with the
best parameters selected in tuning process. The last element contains data
for AUC plots
}
\description{
Build machine-learning based on gene-expression/mscores data
}
\examples{
data(refData, exampleData, exampleMetadata)
\donttest{

MScoresExample <- getMscores(genesets = relevantPaths,
Patient = exampleData,
Healthy = NULL,
nk = 5)

fit.model <- trainModel(expData=MScoresExample,
metadata=exampleMetadata,
var2predict="Response",
models=methodsML("svmLinear"),
Koutter=5,
Kinner=10,
repeatsCV=10)
}

}
\references{
Toro-Domínguez, D. et al (2022). \emph{Scoring personalized
molecular portraits identify Systemic Lupus Erythematosus subtypes and
predict individualized drug responses, symptomatology and
disease progression}
 . Briefings in Bioinformatics. 23(5)
}
\author{
Jordi Martorell-Marugán, \email{jordi.martorell@genyo.es}

Daniel Toro-Dominguez, \email{danieltorodominguez@gmail.com}
}
